{"cancel/deregister/undo/deny/unset/unschedule/unregister/unbind/uninitialize/unload/deselect/unlock/unblock": ["V NP", "V NP PP(from){.source}", "V NP PP(in/on){.location}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V NP PP(from){.source} PP(to){.goal}", "V NP PP(as){.goal} PP(for){.beneficiary}"], "test/tell/determine/check/retrieve/ascertain/return/control/indicate/query/report/validate/get/invalidate/verify/find/identify/track/detect/decide": ["V S", "V NP", "V PP(for){.theme}", "V NP if/whether S", "V NP PP(for){.theme}", "V NP PP(in){.location}", "V whether/if/that/when S", "V PP(for){.theme} PP(between/on){.patient}"], "update/modify/fill/edit/change/rename/populate/adjust/flush/trim/adapt/reconcile/resize": ["V NP", "V whether S", "V PP(to){.goal}", "V NP PP(by) S_ING", "V NP PP(to){.goal}", "V NP PP(as){.theme}", "V NP PP(from){.source}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V NP PP(in/within){.location}", "V NP PP(with){.instrument} PP(in){.location}", "V NP PP(with){.instrument} PP(from){.source}", "V NP PP(for){.beneficiary} PP(in){.location}", "V NP PP(with){.instrument} PP(for){.beneficiary}", "V NP PP(with){.instrument} PP(from){.source} PP(to){.goal}"], "set/control/describe/define/specify/tell/give/assign/determine/indicate/configure/schedule/declare/reassign/clamp/put/designate": ["V S", "V NP", "V NP S_INF", "V NP when S", "V PP(to){.goal}", "V NP PP(by) S_ING", "V NP if/whether S", "V NP PP(for) S_ING", "V NP PP(about){.topic}", "V PP(for){.beneficiary}", "V PP(on/in/at){.location}", "V NP PP(for){.beneficiary}", "V NP PP(as/to/into){.goal}", "V NP PP(between){.attribute}", "V if/whether/that/when/where S", "V NP PP(with/from){.instrument}", "V NP PP(on/in/at/within){.location}", "V NP PP(as/to){.goal} PP(for){.beneficiary}", "V NP PP(for){.beneficiary} PP(as/to){.goal}", "V NP PP(with){.instrument} PP(about){.topic}", "V NP PP(with/from){.instrument} PP(as/to){.goal}", "V NP PP(for){.beneficiary} PP(on/in/at){.location}", "V NP PP(as/to/into){.goal} PP(on/in/at){.location}", "V NP PP(for){.beneficiary} PP(with/from){.instrument}", "V NP PP(on/in/at){.location} PP(with/from){.instrument}"], "create/build/produce/construct/generate/establish/make/obtain/reconstitute/compose/instantiate/implement/get/retrieve/return/install/set up": ["V NP", "V NP PP(by) S_ING", "V NP PP(for) S_ING", "V PP(from){.material}", "V NP PP(for){.beneficiary}", "V NP PP(in/on/within/at){.location}", "V NP PP(from/with/by/over/out of){.material}", "V NP PP(from){.source} PP(with){.instrument}", "V NP{.material} PP(into/to/as/onto){.product}", "V NP PP(for){.beneficiary} PP(with){.material}", "V NP PP(for){.beneficiary} PP(from/with/by/over/out of){.material}", "V NP PP(from/with/by/over/out of){.material} PP(in/on/within){.location}"], "draw/render/paint/redraw/repaint": ["V NP", "V NP if S", "V PP(to){.goal}", "V NP PP(by) S_ING", "V PP(in){.location}", "V NP PP(within){.time}", "V NP PP(with){.instrument}", "V NP PP(into/to/as){.goal}", "V NP PP(for){.beneficiary}", "V NP PP(at/on/in){.location}", "V NP PP(for){.beneficiary} PP(with){.instrument}"], "handle/process": ["V NP", "V NP PP(by) S_ING", "V NP PP(for) S_ING", "V NP PP(from){.source}", "V NP PP(by){.instrument}", "V NP PP(on/in){.location}", "V NP{.source} PP(as/into){.goal}"], "return/get/obtain/fetch/acquire/determine/take/capture/retrieve/describe/provide/represent/reclaim/receive/claim/extract": ["V S", "V NP", "V NP if S", "V PP(to){.goal}", "V NP PP(for) S_ING", "V PP(in){.location}", "V NP PP(as/to){.goal}", "V why/where/whether S", "V NP PP(about){.theme}", "V NP PP(for){.beneficiary}", "V NP PP(from/over){.source}", "V NP PP(with/via/by){.instrument}", "V NP PP(at/in/on/within){.location}", "V NP PP(as/to){.goal} PP(from){.source}", "V NP PP(for){.beneficiary} PP(at){.time}", "V NP PP(as/to){.goal} PP(for){.beneficiary}", "V NP PP(from/over){.source} PP(to/as){.goal}", "V NP PP(for){.beneficiary} PP(with){.instrument}", "V NP PP(from/over){.source} PP(for){.beneficiary}", "V NP PP(from/over){.source} PP(with){.instrument}", "V NP PP(as/to){.goal} PP(at/in/on/within){.location}", "V NP PP(for){.beneficiary} PP(at/in/on/within){.location}", "V NP PP(from/over){.source} PP(at/in/on/within){.location}"], "perform/execute/run/call/invoke/enforce/fire/trigger/indicate/occur": ["V NP", "V when/that S", "V NP when/that S", "V NP PP(by) S_ING", "V NP PP(over){.theme}", "V NP PP(from){.source}", "V NP PP(around){.topic}", "V NP PP(to){.co-patient}", "V NP PP(on/in){.location}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V NP PP(as/to){.goal} PP(on/in){.location}", "V NP PP(on/in){.location} PP(with){.instrument}", "V NP PP(on/in){.location} PP(for){.beneficiary}"], "stop/quit/terminate/interrupt/end/crash/intercept/abort/disconnect/shutdown/pause/finalize/freeze/block": ["V NP", "V S_ING", "V NP if/when S", "V NP PP(by) S_ING", "V NP PP(for) S_ING", "V PP(from){.source}", "V NP PP(from){.source}", "V NP PP(for){.beneficiary}", "V NP PP(in/on/at){.location}"], "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal": ["V NP", "V NP PP(by) S_ING", "V NP PP(at/on){.location}", "V NP PP(as/to/into){.goal}", "V NP PP(from/against/out of){.source}", "V NP PP(for){.beneficiary} PP(as){.goal}", "V NP PP(from/against/out of){.source} PP(as/to/into){.goal}"], "bind/attach/rebind/reattach": ["V NP", "V NP PP(for) S_ING", "V NP PP(in){.location}", "V NP PP(to){.co-patient}", "V NP PP(in){.instrument}", "V NP PP(to){.co-patient} PP(for){.beneficiary}"], "open/turn on": ["V NP", "V NP PP(for) S_ING", "V NP PP(on){.location}", "V NP PP(with){.instrument}", "V NP PP(for/to){.beneficiary}"], "assert": ["V NP", "V that S"], "query/find/locate/determine/retrieve/visit/look/search/discover/seek/look up": ["V NP", "V if/whether S", "V PP(to) NP", "V PP(out) if S", "V PP(for){.theme}", "V NP PP(for){.theme}", "V NP PP(from){.source}", "V NP PP(about){.topic}", "V NP PP(from){.source}", "V NP PP(on/in/at){.location}", "V NP PP(by/with){.instrument}", "V PP(for){.theme} PP(in){.location}", "V NP PP(as){.goal} PP(from){.source}", "V NP PP(as){.goal} PP(in){.location}", "V NP PP(in){.location} PP(for){.theme}", "V NP PP(on/in/at){.location} PP(by/with){.instrument}"], "copy/clone": ["V NP", "V NP PP(to/into){.goal}", "V PP(to/into){.goal} PP(in){.location}", "V PP(from/at){.source} PP(to/into){.goal}", "V PP(to/into){.goal} PP(in/at){.location}", "V NP PP(in/at){.location} PP(into/to){.goal}", "V NP PP(to/into){.goal} PP(from/at){.source}", "V NP PP(for){.beneficiary} PP(to/into){.goal}", "V NP PP(for){.beneficiary} PP(from/at){.source}"], "make/cause/instruct": ["V NP", "V NP ADJ", "V NP ADJ PP(by) S_ING", "V NP PP(for){.beneficiary}", "V NP PP(at){.location} ADJ", "V NP PP(in/at/on){.location}", "V NP PP(with/by){.instrument}", "V NP ADJ PP(for){.beneficiary}", "V NP PP(from){.source} PP(to){.goal}"], "initialize/reinitialize/prepare/refresh/reset/initiate/reposition": ["V NP", "V NP PP(by) S_ING", "V NP PP(as/to/for){.goal}", "V NP PP(from){.source}", "V NP PP(with){.instrument}", "V NP PP(in/on/at){.location}", "V NP PP(by/with){.instrument}", "V NP PP(as/to/for){.goal} PP(from){.source}", "V NP PP(with){.instrument} PP(about){.theme}", "V NP PP(as/to/for){.goal} PP(in/on/at){.location}"], "format/return": ["V NP", "V NP PP(from){.source}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V NP PP(to/into/in){.goal}"], "send/pass/give/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/notify/signal": ["V NP", "V that S", "V NP that S", "V NP PP(by) S_ING", "V NP PP(to){.goal}", "V NP PP(from){.source}", "V NP PP(for){.beneficiary}", "V NP PP(down/on){.location}", "V NP PP(through){.instrument}", "V NP PP(to){.goal} PP(by) S_ING", "V NP PP(from){.source} PP(to){.goal}", "V NP PP(to){.goal} PP(in/on){.location}"], "close/end/release/free/finish/dismiss/deactivate/disable/turn off": ["V NP", "V S_ING", "V NP if S", "V PP(in){.location}", "V NP PP(about){.topic}", "V NP PP(to){.co-patient}", "V NP PP(with){.attribute}", "V NP PP(for){.beneficiary}", "V NP PP(on/in/within){.location}"], "choose/select": ["V NP", "V NP PP(from){.source}", "V NP PP(at/in){.location}", "V NP PP(for){.beneficiary}", "V NP PP(as){.goal} PP(at/in){.location}"], "compute/calculate/determine/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/return/increment": ["V NP", "V whether S", "V PP(by){.instrument}", "V NP PP(in){.location}", "V NP PP(into/to){.goal}", "V NP PP(for){.beneficiary}", "V NP PP(for){.beneficiary} PP(by) S_ING", "V NP PP(from/within/on/between/with){.source}", "V NP PP(for){.beneficiary} PP(as/into/to){.goal}"], "connect/associate/join/combine/concatenate/merge/concat/add/group": ["V NP", "V PP(to){.theme}", "V NP PP(to/into){.goal}", "V NP PP(with){.instrument}", "V NP PP(within){.location}", "V NP PP(in){.location} PP(into){.goal}", "V NP PP(to/into){.goal} PP(on/in){.location}", "V NP PP(to/into){.goal} PP(for){.beneficiary}", "V NP PP(to/into){.goal} PP(with){.instrument}", "V NP PP(with){.instrument} PP(on/in){.location}"], "visit/rescan/scan/walk/iterate/access": ["V NP", "V PP(to){.theme}", "V NP PP(by) S_ING", "V NP PP(as){.goal}", "V PP(over){.patient}", "V NP PP(in){.location}", "V PP(through){.instrument} PP(in){.location}", "V NP PP(through){.instrument} PP(in){.location}"], "apply/reapply/accept/re-apply": ["V NP", "V NP PP(to/on/over){.goal}"], "report/notify/tell/indicate/prompt": ["V NP", "V that S", "V NP S_INF", "V NP PP(to){.goal}", "V PP(from){.source}", "V NP PP(to){.co-theme}", "V NP PP(about){.topic}", "V NP PP(in){.location}", "V NP that/when/whether S", "V NP PP(for){.beneficiary}", "V PP(to){.co-theme} that S", "V NP PP(for){.beneficiary} PP(in){.location}"], "compare/return": ["V NP", "V NP if S", "V NP PP(for){.theme}", "V NP PP(against/with/to){.co-patient}", "V NP PP(for){.theme} PP(against/with/to){.co-patient}", "V NP PP(against/with/to){.co-patient} PP(in){.location}"], "write/record/log/print/output": ["V NP", "V that S", "V PP(to){.goal}", "V NP PP(about){.topic}", "V NP PP(from){.source}", "V NP PP(with){.instrument}", "V NP PP(at/on/in){.location}", "V NP PP(as/to/into/onto){.goal}", "V NP PP(from){.source} PP(for){.beneficiary}", "V NP PP(as/into/to){.goal} PP(via){.instrument}", "V NP PP(from){.source} PP(as/to/into/onto){.goal}", "V NP PP(as/into/to){.goal} PP(at/in/on){.location}", "V NP PP(as/to/into/onto){.goal} PP(for){.beneficiary}", "V NP PP(from){.source} PP(for){.beneficiary} PP(to){.goal}"], "append/put/add/insert/push/interpolate/place/install/register/queue/register/enqueue": ["V NP", "V S_INF", "V NP S_INF", "V NP PP(from){.source}", "V PP(for){.beneficiary}", "V NP PP(for){.beneficiary}", "V NP PP(by) S_ING", "V NP PP(in/on/at){.location}", "V NP PP(with/by){.instrument}", "V NP PP(between){.co-patient}", "V NP PP(in/to/into/onto/as){.goal}", "V NP PP(to){.co-theme} PP(into){.goal}", "V NP PP(from){.source} PP(on){.location}", "V NP PP(in){.location} PP(to/into){.goal}", "V NP PP(for){.beneficiary} PP(in){.location}", "V NP PP(in/to/into/onto/as){.goal} PP(by) S_ING", "V NP PP(from){.source} PP(in/to/into/onto){.goal}", "V NP PP(for){.beneficiary} PP(by/with){.instrument}", "V NP PP(in/on/at){.location} PP(into/as/onto/to){.goal}", "V NP PP(in/to/into/onto/as){.goal} PP(for){.beneficiary}", "V NP PP(with/by){.instrument} PP(into/as/onto/to){.goal}", "V NP PP(for){.beneficiary} PP(in/to/into/onto/as){.goal}", "V NP PP(in/to/into/onto/as){.goal} PP(at/in/on){.location}", "V NP PP(in/to/into/onto/as){.goal} PP(by/with){.instrument}"], "start/wake/launch/happen/begin/enable/re-enable": ["V NP", "V S_ING", "V NP PP(to){.goal}", "V NP PP(about){.topic}", "V NP PP(from){.source}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V NP PP(within){.co-patient}", "V NP PP(in/on/into){.co-patient}", "V NP PP(to){.goal} PP(from){.source}", "V NP PP(for){.beneficiary} PP(with){.instrument}"], "replace": ["V NP", "V NP if S", "V NP PP(in){.location}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary} PP(with){.instrument}", "V NP PP(with){.instrument} PP(at/in/on){.location}"], "clear/clean/remove/empty": ["V NP", "V NP PP(by) S_ING", "V NP PP(from){.source}", "V NP PP(in){.location}", "V NP PP(for){.beneficiary}", "V NP PP(about){.topic} PP(from){.source}", "V NP PP(by){.instrument} PP(from){.source}"], "store/save/dump/retain/cache/stash/serialize/deserialize/persist": ["V NP", "V NP if S", "V NP PP(from){.source}", "V NP PP(into/to){.goal}", "V NP PP(for){.beneficiary}", "V NP PP(around/in){.location}", "V NP PP(for){.beneficiary} PP(into/to){.goal}"], "provide/give/supply": ["V NP", "V NP that S", "V NP PP(to/as){.goal}", "V NP PP(about){.theme}", "V NP PP(from){.source}", "V PP(for){.beneficiary}", "V NP PP(for){.beneficiary}"], "move/scroll/offset/advance": ["V NP", "V PP(to){.goal}", "V NP PP(by) S_ING", "V NP PP(from){.source}", "V PP(up/down){.patient}", "V NP PP(to/down){.goal}", "V NP PP(by){.instrument}", "V NP PP(over){.duration}", "V NP PP(in/within){.location}", "V NP PP(to){.goal} PP(by) S_ING", "V NP PP(from){.source} PP(to/down){.goal}"], "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/dequeue/abandon/discard/peek": ["V NP", "V NP if S", "V PP(at){.location}", "V PP(from){.source}", "V NP PP(as/to){.goal}", "V NP PP(from){.source}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V NP PP(at/in/on){.location}", "V NP PP(from){.source} PP(at){.location}", "V NP PP(with){.instrument} PP(from){.source}", "V NP PP(for){.beneficiary} PP(at){.location}", "V NP PP(from){.source} PP(for){.beneficiary}", "V NP PP(at/in/on){.location} PP(from){.source}"], "finish/complete/finalize/complement": ["V NP", "V S_ING", "V NP PP(by) S_ING", "V NP PP(in/at/on){.location}"], "convert/change/transfer/map/turn/transform/reconvert/move/adapt/translate/force/cast/return": ["V NP", "V PP(to){.goal}", "V NP PP(from){.source}", "V NP PP(by){.instrument}", "V NP PP(in/at){.location}", "V NP PP(to/as/into){.goal}", "V NP PP(to/as/into){.goal} PP(by) S_ING", "V NP PP(as/into/to){.goal} PP(from){.source}", "V NP PP(to/as/into){.goal} PP(by/with){.instrument}", "V NP PP(to/as/into){.goal} PP(in/at){.location}", "V NP PP(to/as/into){.goal} PP(for){.beneficiary}", "V NP PP(from){.source} PP(to/as/into){.goal} PP(in/at){.location}"], "wait/await/sleep": ["V NP", "V PP(for){.patient}"], "match": ["V PP(against){.co-patient}", "V NP PP(against/with){.co-patient}", "V NP PP(at/in){.location} PP(against/with){.co-patient}"], "read/load/reload": ["V NP", "V PP(in){.theme}", "V PP(into){.goal}", "V PP(from){.source}", "V NP PP(from){.source}", "V NP PP(to/into/as){.goal}", "V NP PP(with){.instrument}", "V NP PP(for){.beneficiary}", "V PP(in){.theme} PP(from){.source}", "V PP(from){.source} PP(into){.goal}", "V NP PP(in/on/at/out of){.location}", "V NP PP(from){.source} PP(for) S_ING", "V NP PP(from){.source} PP(at){.location}", "V NP PP(from){.source} PP(for){.beneficiary}", "V NP PP(for){.beneficiary} PP(with){.instrument}"], "request/ask/give/allow": ["V NP", "V S_INF", "V NP if S", "V NP S_INF", "V that/whether/if S", "V NP PP(from){.source}", "V NP PP(for){.beneficiary}", "V PP(for){.beneficiary} S_INF", "V NP PP(at){.location} PP(from){.source}"], "relayout/layout/lay out": ["V NP"], "display/show/present/bring": ["V NP", "V NP PP(to/as){.goal}", "V NP PP(from){.source}", "V NP PP(with){.co-theme}", "V NP PP(for){.beneficiary}", "V NP PP(at/on/in){.location}"], "hide/collapse": ["V NP", "V NP PP(in/from){.location}"], "call/invoke/tell/indicate/occur/perform/prompt/notify": ["V PP(by){.agent}", "V PP(after) S", "V when S", "V PP(from){.source} when S"], "restore/recover/resume": ["V NP", "V S_ING", "V NP PP(by) S_ING", "V NP PP(from){.source}"], "import": ["V NP"], "synchronize ": ["V NP"], "commit/submit": ["V NP", "V NP PP(to){.theme}", "V NP PP(for){.co-patient}"], "sort": ["V NP", "V NP PP(into){.product}"], "pin": ["V NP PP(at/on){.location}"], "allocate/reallocate": ["V NP", "V NP PP(for){.beneficiary}", "V NP PP(with){.theme} PP(for){.beneficiary}"], "cumulate/sum": ["V NP"], "play": ["V NP", "V NP PP(in/at){.location}", "V NP PP(with){.instrument} PP(in/at){.location}"], "inflate/extend": ["V NP", "V NP PP(from){.source}"], "tune": ["V PP(to){.theme}", "V PP(to){.theme} PP(for){.co-patient}"], "enter": ["V NP PP(on){.co-patient}", "V NP PP(between){.attribute}"], "toggle": ["V NP"], "export": ["V NP", "V NP PP(to){.location}"], "flash": ["V NP"], "intersect": ["V NP{.patient} PP(with){.patient}"], "validate/authenticate/revalidate": ["V NP", "V NP PP(with){.instrument}"], "publish": ["V NP", "V NP PP(to){.goal}"], "redo": ["V NP", "V NP PP(from){.source}"], "destroy/tear": ["V NP", "V PP(down){.patient}", "V NP PP(in/at){.location}", "V PP(down){.patient} PP(for){.beneficiary}"], "flip/rotate/permute/swap/transpose/reverse/shuffle": ["V NP", "V PP(to){.goal}", "V NP PP(by){.instrument}", "V NP PP(at/in){.location}"], "compile": ["V NP PP(for){.beneficiary}", "V NP PP(in/into){.product} PP(with){.material}"], "collect/recycle/sample": ["V NP"], "mark": ["V NP", "V NP PP(as) S_ING", "V PP(in){.patient}", "V NP PP(as){.goal}", "V NP PP(in){.location}"], "confirm/ensure/determine": ["V NP", "V that S", "V NP PP(for){.beneficiary}"], "touch/press": ["V NP"], "delay/defer/postpone": ["V NP", "V NP PP(on){.theme}"], "split/break/divide": ["V NP", "V NP PP(on){.co-patient}", "V NP{.material} PP(into/to){.product}", "V NP PP(on){.co-patient} PP(at){.location}"], "negate": ["V NP"], "normalize": ["V NP"], "span": ["V NP"], "cut": ["V NP PP(into){.goal}"], "redirect/jump/skip/fling/go/navigate": ["V NP", "V NP PP(to){.goal}", "V NP PP(from){.source}", "V NP PP(in){.location}", "V PP(over/to){.patient}", "V PP(from){.source} PP(to){.goal}", "V NP PP(to){.goal} PP(in){.location}", "V PP(over){.patient} PP(from){.source}"], "list/enumerate": ["V NP", "V NP PP(on/in){.location}"], "delegate": ["V NP PP(to){.co-theme}"], "filter": ["V NP", "V NP PP(by){.instrument}"], "simulate": ["V S_ING"], "speak": ["V NP"], "lock": ["V NP"], "respond": ["V PP(to){.goal}", "V PP(to){.co-theme} PP(for){.goal}"], "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape": ["V NP", "V S_INF", "V NP", "V NP PP(in){.location}", "V NP PP(into/as/to){.product}", "V NP PP(in){.location} PP(into/as/to){.product}", "V NP PP(from){.material} PP(to/as/into){.product}"]}